/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RequestPrintShop;

import RequestPrintDatabase.ConnectionBuilder;
import RequestPrintLogin.LoginEPrinting;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class RespondPrint extends javax.swing.JFrame {

    private static int orderId;
    DefaultTableModel model;

    public static int getOrderId() {
        return orderId;
    }

    /**
     * Creates new form ResponPrint
     */
    public RespondPrint() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideLeft = new javax.swing.JPanel();
        home = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        signOut = new javax.swing.JLabel();
        bgMenu = new javax.swing.JPanel();
        respondPrint = new javax.swing.JLabel();
        manageBook = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        responnPrintTitle = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();
        custNameField = new javax.swing.JLabel();
        telephone = new javax.swing.JLabel();
        telephoneField = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        emailField = new javax.swing.JLabel();
        order = new javax.swing.JLabel();
        orderField = new javax.swing.JTextField();
        description = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextPane();
        productAmount = new javax.swing.JLabel();
        productAmountField = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        priceField = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        statusField = new javax.swing.JLabel();
        typeOrder = new javax.swing.JLabel();
        changeStatusBG = new javax.swing.JPanel();
        changeStatusButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        sideLeft.setBackground(new java.awt.Color(102, 102, 102));
        sideLeft.setLayout(null);

        home.setBackground(new java.awt.Color(204, 204, 204));
        home.setFont(new java.awt.Font("Cloud Light", 1, 18)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        home.setText("Home");
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        sideLeft.add(home);
        home.setBounds(0, 100, 230, 40);

        profile.setBackground(new java.awt.Color(204, 204, 204));
        profile.setFont(new java.awt.Font("Cloud Light", 1, 18)); // NOI18N
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profile.setText("Profile");
        profile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });
        sideLeft.add(profile);
        profile.setBounds(0, 150, 230, 40);

        signOut.setFont(new java.awt.Font("Cloud Light", 1, 13)); // NOI18N
        signOut.setForeground(new java.awt.Color(255, 255, 255));
        signOut.setText("Sign out");
        signOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signOutMouseClicked(evt);
            }
        });
        sideLeft.add(signOut);
        signOut.setBounds(140, 550, 60, 20);

        bgMenu.setBackground(new java.awt.Color(102, 102, 102));

        respondPrint.setBackground(new java.awt.Color(204, 204, 204));
        respondPrint.setFont(new java.awt.Font("Cloud Light", 1, 18)); // NOI18N
        respondPrint.setForeground(new java.awt.Color(255, 255, 255));
        respondPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        respondPrint.setText("Respond Print");
        respondPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout bgMenuLayout = new javax.swing.GroupLayout(bgMenu);
        bgMenu.setLayout(bgMenuLayout);
        bgMenuLayout.setHorizontalGroup(
            bgMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgMenuLayout.createSequentialGroup()
                .addComponent(respondPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        bgMenuLayout.setVerticalGroup(
            bgMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgMenuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(respondPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        sideLeft.add(bgMenu);
        bgMenu.setBounds(0, 250, 230, 40);

        manageBook.setBackground(new java.awt.Color(204, 204, 204));
        manageBook.setFont(new java.awt.Font("Cloud Light", 1, 18)); // NOI18N
        manageBook.setForeground(new java.awt.Color(255, 255, 255));
        manageBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageBook.setText("Manage Book");
        manageBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manageBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageBookMouseClicked(evt);
            }
        });
        sideLeft.add(manageBook);
        manageBook.setBounds(0, 200, 230, 40);

        logoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideLeft.add(logoutIcon);
        logoutIcon.setBounds(200, 550, 20, 20);

        getContentPane().add(sideLeft);
        sideLeft.setBounds(0, 0, 230, 600);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(610, 100, 190, 0);

        body.setBackground(new java.awt.Color(228, 228, 228));
        body.setLayout(null);

        orderTable.setBackground(new java.awt.Color(226, 252, 226));
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "OrderID", "Customer Name", "Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.setSelectionBackground(new java.awt.Color(204, 255, 255));
        orderTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderTable);

        body.add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 500, 490);

        responnPrintTitle.setFont(new java.awt.Font("Moon", 1, 24)); // NOI18N
        responnPrintTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        responnPrintTitle.setText("Respond Print");
        body.add(responnPrintTitle);
        responnPrintTitle.setBounds(0, 20, 810, 40);

        customerName.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        customerName.setText("Customer name");
        body.add(customerName);
        customerName.setBounds(540, 70, 160, 20);

        custNameField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(custNameField);
        custNameField.setBounds(550, 90, 230, 20);

        telephone.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        telephone.setText("Telephone");
        body.add(telephone);
        telephone.setBounds(540, 120, 110, 20);

        telephoneField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(telephoneField);
        telephoneField.setBounds(550, 140, 230, 20);

        email.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        email.setText("Email");
        body.add(email);
        email.setBounds(540, 170, 110, 20);

        emailField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(emailField);
        emailField.setBounds(550, 190, 230, 20);

        order.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        order.setText("Order");
        body.add(order);
        order.setBounds(540, 220, 60, 20);

        orderField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(orderField);
        orderField.setBounds(550, 240, 230, 30);

        description.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        description.setText("Description");
        body.add(description);
        description.setBounds(540, 280, 110, 20);

        descriptionField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        jScrollPane2.setViewportView(descriptionField);

        body.add(jScrollPane2);
        jScrollPane2.setBounds(550, 300, 230, 70);

        productAmount.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        productAmount.setText("Product Amount");
        body.add(productAmount);
        productAmount.setBounds(540, 380, 160, 20);

        productAmountField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(productAmountField);
        productAmountField.setBounds(550, 400, 230, 20);

        price.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        price.setText("Price");
        body.add(price);
        price.setBounds(540, 430, 110, 20);

        priceField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(priceField);
        priceField.setBounds(550, 450, 230, 20);

        status.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        status.setText("Order status");
        body.add(status);
        status.setBounds(540, 480, 120, 20);

        statusField.setFont(new java.awt.Font("Moon", 0, 13)); // NOI18N
        body.add(statusField);
        statusField.setBounds(550, 500, 230, 20);

        typeOrder.setFont(new java.awt.Font("Moon", 1, 16)); // NOI18N
        typeOrder.setForeground(new java.awt.Color(255, 0, 0));
        body.add(typeOrder);
        typeOrder.setBounds(610, 220, 90, 20);

        changeStatusBG.setBackground(new java.awt.Color(255, 204, 153));
        changeStatusBG.setLayout(null);

        changeStatusButton.setFont(new java.awt.Font("Cloud Light", 0, 18)); // NOI18N
        changeStatusButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changeStatusButton.setText("Change Status");
        changeStatusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changeStatusButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeStatusButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeStatusButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeStatusButtonMouseExited(evt);
            }
        });
        changeStatusBG.add(changeStatusButton);
        changeStatusButton.setBounds(0, 0, 240, 30);

        body.add(changeStatusBG);
        changeStatusBG.setBounds(540, 530, 240, 30);

        getContentPane().add(body);
        body.setBounds(230, 0, 850, 630);

        setSize(new java.awt.Dimension(1034, 611));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void showTableRespondCustomer(){
        model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0);
        Connection con = null;
        try {
            con = ConnectionBuilder.getConnection();
            LoginEPrinting login = new LoginEPrinting();
            PreparedStatement pstmOrder = con.prepareStatement("SELECT * FROM Orders WHERE "
                    + "ShopProfile_shopID = " + login.getShopId());
            ResultSet rsOrder = pstmOrder.executeQuery();
            while (rsOrder.next()) {
                PreparedStatement pstmUser = con.prepareStatement("SELECT * FROM UserProfile WHERE "
                        + "id = " + rsOrder.getInt("UserProfile_id"));
                ResultSet rsUser = pstmUser.executeQuery();
                rsUser.next();
                Vector v = new Vector();
                v.add(rsOrder.getInt("orderID"));
                v.add(rsUser.getString("name") + " " + rsUser.getString("surname"));
                v.add(rsOrder.getString("datetime"));
                if (rsOrder.getString("status").equals("Product can be picked")) {
                    v.add("Wait for receipt");
                } else {
                    v.add(rsOrder.getString("status"));
                }
                model.addRow(v);
                pstmUser.close();
            }
            pstmOrder.close();
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(RespondPrint.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void showData(){
        Connection con = null;
        try {
            con = ConnectionBuilder.getConnection();
            LoginEPrinting login = new LoginEPrinting();
            //executeQuery Order Table
            PreparedStatement pstmOrder = con.prepareStatement("SELECT * FROM Orders WHERE "
                    + "ShopProfile_shopID = " + login.getShopId());
            ResultSet rsOrder = pstmOrder.executeQuery();
            rsOrder.next();

            //executeQuery UserProfile Table
            PreparedStatement pstmUser = con.prepareStatement("SELECT * FROM UserProfile WHERE "
                    + "id = " + rsOrder.getInt("UserProfile_id"));
            ResultSet rsUser = pstmUser.executeQuery();
            rsUser.next();

            //executeQuery SheetOrder Table
            PreparedStatement pstmSheetOrder = con.prepareStatement("SELECT * FROM SheetOrder WHERE "
                    + "Order_orderID = " + rsOrder.getInt("orderID"));
            ResultSet rsSheetOrder = pstmSheetOrder.executeQuery();
            rsSheetOrder.next();

            //executeQuery Product Table
            PreparedStatement pstmProduct = con.prepareStatement("SELECT * FROM Product WHERE "
                    + "productID = " + rsSheetOrder.getInt("Product_productID"));
            ResultSet rsProduct = pstmProduct.executeQuery();
            rsProduct.next();

            custNameField.setText(orderTable.getValueAt(orderTable.getSelectedRow(), 1) + "");
            statusField.setText(orderTable.getValueAt(orderTable.getSelectedRow(), 3) + "");
            telephoneField.setText(rsUser.getString("phone"));
            emailField.setText(rsUser.getString("email"));
            orderField.setEditable(false);
            //check Order
            if (rsOrder.getString("url") == null) {
                typeOrder.setText("* Book *");
                orderField.setText(rsProduct.getString("productName"));
            } else {
                typeOrder.setText("* URL *");
                orderField.setText(rsOrder.getString("url"));
            }
            //check description
            if (rsOrder.getString("description") == null) {
                descriptionField.setText("<null>");
            } else {
                descriptionField.setText(rsOrder.getString("description"));
            }
            descriptionField.setEditable(false); //don't edit text in descripton Field
            productAmountField.setText(rsSheetOrder.getInt("productAmount") + "");
            priceField.setText(rsOrder.getDouble("priceOrder") + "");

            orderId = (int) (orderTable.getValueAt(orderTable.getSelectedRow(), 0));
            
            pstmOrder.close();
            pstmProduct.close();
            pstmSheetOrder.close();
            pstmUser.close();
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(RespondPrint.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void manageBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageBookMouseClicked
        ManageListBook mlb = new ManageListBook();
        this.setVisible(false);
        mlb.setVisible(true);
    }//GEN-LAST:event_manageBookMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        showTableRespondCustomer();
    }//GEN-LAST:event_formWindowActivated

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        ShopProfile sProf = new ShopProfile();
        this.setVisible(false);
        sProf.setVisible(true);
    }//GEN-LAST:event_profileMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        bgMenu.setBackground(new java.awt.Color(234, 234, 234));
        respondPrint.setBackground(new java.awt.Color(234, 234, 234));
        respondPrint.setForeground(new java.awt.Color(30, 30, 30));
        orderTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        orderTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        orderTable.getColumnModel().getColumn(1).setPreferredWidth(160);
        orderTable.getColumnModel().getColumn(2).setPreferredWidth(79);
        orderTable.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        
        Image logout = new ImageIcon(this.getClass().getResource("../icon/logout.png")).getImage();
        logoutIcon.setIcon(new ImageIcon(logout.getScaledInstance(logoutIcon.getWidth(), logoutIcon.getHeight(), 0)));
    }//GEN-LAST:event_formComponentShown

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        showData();
    }//GEN-LAST:event_orderTableMouseClicked

    private void signOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signOutMouseClicked
        LoginEPrinting login = new LoginEPrinting();
        this.setVisible(false);
        login.setVisible(true);
    }//GEN-LAST:event_signOutMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        HomeShop home = new HomeShop();
        this.setVisible(false);
        home.setVisible(true);
    }//GEN-LAST:event_homeMouseClicked

    private void changeStatusButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeStatusButtonMouseEntered
        changeStatusBG.setBackground(new java.awt.Color(255,187,127));
    }//GEN-LAST:event_changeStatusButtonMouseEntered

    private void changeStatusButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeStatusButtonMouseExited
        changeStatusBG.setBackground(new java.awt.Color(255,204,153));
    }//GEN-LAST:event_changeStatusButtonMouseExited

    private void changeStatusButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeStatusButtonMouseClicked
        ChangeStatus change = new ChangeStatus();
        change.setVisible(true);
    }//GEN-LAST:event_changeStatusButtonMouseClicked


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set thbgMenuook and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RespondPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RespondPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RespondPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RespondPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RespondPrint().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgMenu;
    private javax.swing.JPanel body;
    private javax.swing.JPanel changeStatusBG;
    private javax.swing.JLabel changeStatusButton;
    private javax.swing.JLabel custNameField;
    private javax.swing.JLabel customerName;
    private javax.swing.JLabel description;
    private javax.swing.JTextPane descriptionField;
    private javax.swing.JLabel email;
    private javax.swing.JLabel emailField;
    private javax.swing.JLabel home;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel manageBook;
    private javax.swing.JLabel order;
    private javax.swing.JTextField orderField;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel price;
    private javax.swing.JLabel priceField;
    private javax.swing.JLabel productAmount;
    private javax.swing.JLabel productAmountField;
    private javax.swing.JLabel profile;
    private javax.swing.JLabel respondPrint;
    private javax.swing.JLabel responnPrintTitle;
    private javax.swing.JPanel sideLeft;
    private javax.swing.JLabel signOut;
    private javax.swing.JLabel status;
    private javax.swing.JLabel statusField;
    private javax.swing.JLabel telephone;
    private javax.swing.JLabel telephoneField;
    private javax.swing.JLabel typeOrder;
    // End of variables declaration//GEN-END:variables
}
